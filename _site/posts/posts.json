[
  {
    "path": "posts/2021-03-14-analiscorrespondencia/",
    "title": "Análisis de correspondencia con R",
    "description": "Análisis para variables categóricas utilizando la metodología de tablas cruzadas con la prueba de chi-cuadrado. Este análisis es una recopilación del libro Multivariate Analysis II: Practical Guide To Principal Component Methods in R.",
    "author": [
      {
        "name": "Franklin Santos",
        "url": "https://franklinsantos.com"
      }
    ],
    "date": "2020-11-07",
    "categories": [
      "Chi-cuadrado",
      "Biplot",
      "Componentes Principales"
    ],
    "contents": "\nIntroducción\nEl análisis de correspondencia (CA) es una extensión del análisis de componentes principales (Capítulo 4) adecuado para explorar relaciones entre variables cualitativas (o datos categóricos). Al igual que el análisis de componentes principales, proporciona una solución para resumir y visualizar conjuntos de datos en gráficos de dos dimensiones.\nAquí, describimos el análisis de correspondencia simple, que se utiliza para analizar frecuencias formadas por dos datos categóricos, una tabla de datos conocida como tabla de contingencia, tambien se conoce como tablas cruzadas. Proporciona puntuaciones de factores (coordenadas) para los puntos de fila y columna de la tabla de contingencia. Estas coordenadas se utilizan para visualizar gráficamente la asociación entre elementos de fila y columna en la tabla de contingencia.\nAl analizar una tabla de contingencia bidireccional, una pregunta típica es si ciertos elementos de fila están asociados con algunos elementos de elementos de columna. El análisis de correspondencia es un enfoque geométrico para visualizar las filas y columnas de una tabla de contingencia bidireccional como puntos en un espacio de baja dimensión, de modo que las posiciones de los puntos de fila y columna sean consistentes con sus asociaciones en la tabla. El objetivo es tener una visión global de los datos que sea útil para la interpretación.\nEn el capítulo actual, mostraremos cómo calcular e interpretar el análisis de correspondencia usando dos paquetes R: i) FactoMineR para el análisis y ii) factoextra para la visualización de datos. Además, mostraremos cómo revelar las variables más importantes que explican las variaciones en un conjunto de datos.\nProcedimiento computacional en R\nCargar paquetes\n\n\nlibrary(FactoMineR)\nlibrary(factoextra)\n\n\n\nFormato de datos\nLos datos deben ser una tabla de contingencia (resultados de tablas cruzadas). Usaremos los conjuntos de datos de demostración de tareas domésticas disponibles en el paquete factoextra R.\n\n\ndata(housetasks)\n\n\n\nLos datos son una tabla de contingencia que contiene 13 tareas del hogar y su reparto en la pareja:\nlas filas son las diferentes tareas\nLos valores son las frecuencias de las tareas realizadas:\nsolo por la esposa “wife only”\nalternativamente “Alternating”\nsolo por el marido “husband only”\no conjuntamente \"jointly\n\nLos datos se ilustran en la siguiente salida:\n\n           Wife Alternating Husband Jointly\nLaundry     156          14       2       4\nMain_meal   124          20       5       4\nDinner       77          11       7      13\nBreakfeast   82          36      15       7\nTidying      53          11       1      57\nDishes       32          24       4      53\nShopping     33          23       9      55\nOfficial     12          46      23      15\nDriving      10          51      75       3\nFinances     13          13      21      66\nInsurance     8           1      53      77\nRepairs       0           3     160       2\nHolidays      0           1       6     153\n\nGráfica de tablas de contingencia y prueba de chi-cuadrado\nLa tabla de contingencia anterior no es muy grande. Por lo tanto, es fácil inspeccionar e interpretar visualmente los perfiles de filas y columnas:\nEs evidente que las tareas de la casa (lavandería, comida principal y cena) las realiza con más frecuencia la “esposa”.\nLas reparaciones y la conducción las realiza predominantemente el marido.\nLos días festivos se asocian con frecuencia con la columna “conjuntamente”\nEl análisis de datos exploratorios y la visualización de tablas de contingencia se cubrieron en nuestro artículo anterior: Prueba de independencia de chi-cuadrado en R. Brevemente, la tabla de contingencia se puede visualizar utilizando las funciones balloonplot() [paquete gplots] y mosaicplot() [paquete graphics]:\n\n\nlibrary(gplots)\n#1. Convierte el dato como una tabla\ndt <- as.table(as.matrix(housetasks))\n# 2. Graph\nballoonplot(t(dt), main =\"housetasks\", xlab =\"\", ylab=\"\",\n            label = FALSE, show.margins = FALSE)\n\n\n\n\n\nTenga en cuenta que las sumas de filas y columnas se imprimen de forma predeterminada en los márgenes inferior y derecho, respectivamente. Estos valores están ocultos, en el gráfico anterior, utilizando el argumento show.margins = FALSE.\n\nPara una tabla de contingencia pequeña, puede utilizar la prueba de chi-cuadrado para evaluar si existe una dependencia significativa entre las categorías de filas y columnas:\n\n\nchisq <- chisq.test(housetasks)\nchisq\n\n\n\n    Pearson's Chi-squared test\n\ndata:  housetasks\nX-squared = 1944.5, df = 36, p-value < 2.2e-16\n\n\nEn nuestro ejemplo, las variables de fila y columna están asociadas de manera estadísticamente significativa (*valor p* = r chisq$p.value).\n\nCódigo R para calcular CA (Analisis de Correspondencia)\nSe puede utilizar la función CA() [paquete FactoMiner]. Un formato simplificado es:\n\nCA(X, ncp = 5, graph = TRUE)\n\n\nX: es un marco de datos (tabla de contingencia)\nncp: número de dimensiones mantenidas en los resultados finales.\ngraph: un valor lógico. Si es TRUE, se muestra un gráfico.\n\nPara calcular el análisis de correspondencia, escriba esto:\n\n\nlibrary(\"FactoMineR\")\n#housetasks es nuestro marco de datos\nres.ca <- CA(housetasks, graph = FALSE)\n\n\n\nLa salida de la función CA() es una lista que incluye:\n\n\nprint(res.ca)\n\n\n**Results of the Correspondence Analysis (CA)**\nThe row variable has  13  categories; the column variable has 4 categories\nThe chi square of independence between the two variables is equal to 1944.456 (p-value =  0 ).\n*The results are available in the following objects:\n\n   name              description                   \n1  \"$eig\"            \"eigenvalues\"                 \n2  \"$col\"            \"results for the columns\"     \n3  \"$col$coord\"      \"coord. for the columns\"      \n4  \"$col$cos2\"       \"cos2 for the columns\"        \n5  \"$col$contrib\"    \"contributions of the columns\"\n6  \"$row\"            \"results for the rows\"        \n7  \"$row$coord\"      \"coord. for the rows\"         \n8  \"$row$cos2\"       \"cos2 for the rows\"           \n9  \"$row$contrib\"    \"contributions of the rows\"   \n10 \"$call\"           \"summary called parameters\"   \n11 \"$call$marge.col\" \"weights of the columns\"      \n12 \"$call$marge.row\" \"weights of the rows\"         \n\n\nEl objeto que se crea usando la función CA() contiene mucha información que se encuentra en muchas listas y matrices diferentes. Estos valores se describen en la siguiente sección.\n\nVisualización e interpretación\nUsaremos las siguientes funciones [in factoextra] para ayudar en la interpretación y visualización del análisis de correspondencia:\nget_eigenvalue(res.ca): Extraiga los autovalores/varianzas retenidos por cada dimensión (eje)\nfviz_eig(res.ca): Visualiza los valores propios\nget_ca_row(res.ca), get_ca_col(res.ca): Extrae los resultados para filas y columnas, respectivamente.\nfviz_ca_row(res.ca), fviz_ca_col(res.ca): Visualiza los resultados para filas y columnas, respectivamente.\nfviz_ca_biplot(res.ca): Crea un biplot de filas y columnas.\nEn las siguientes secciones, ilustraremos cada una de estas funciones.\nSignificación estadística\nPara interpretar el análisis de correspondencia, el primer paso es evaluar si existe una dependencia significativa entre las filas y las columnas.\nUn método riguroso consiste en utilizar la estadística de chi-cuadrado para examinar la asociación entre las variables de fila y columna. Esto aparece en la parte superior y es generado por la función summary(res.ca) o print(res.ca), ver sección “Gráfica de tablas de contingencia y prueba de chi-cuadrado”. Una estadística de chi-cuadrado alta significa un vínculo fuerte entre las variables de fila y columna o sea, la probabilidad de chi cuadrado deberá ser inferior a 0.05.\n\nEn nuestro ejemplo, la asociación es muy significativa (chi-cuadrado: 1944,456, p = 0).\n\n\n\n# Chi-square statistics\nchi2 <- 1944.456\nchi2\n\n\n[1] 1944.456\n\n# Degree of freedom\ndf <- (nrow(housetasks) - 1) * (ncol(housetasks) - 1)\ndf\n\n\n[1] 36\n\n# P-value\npval <- pchisq(chi2, df = df, lower.tail = FALSE)\npval\n\n\n[1] 0\n\nValores propios/Varianzas\nRecuerde que examinamos los valores propios para determinar el número de ejes a considerar. Los valores propios y la proporción de varianzas retenidas por los diferentes ejes se pueden extraer utilizando la función get_eigenvalue() [paquete factoextra]. Los valores propios son grandes para el primer eje y pequeños para el eje siguiente.\n\n\nlibrary(\"factoextra\")\neig.val <- get_eigenvalue(res.ca)\neig.val\n\n\n      eigenvalue variance.percent cumulative.variance.percent\nDim.1  0.5428893         48.69222                    48.69222\nDim.2  0.4450028         39.91269                    88.60491\nDim.3  0.1270484         11.39509                   100.00000\n\nLos valores propios corresponden a la cantidad de información retenida por cada eje. Las dimensiones se ordenan de forma decreciente y se enumeran de acuerdo con la cantidad de variación explicada en la solución. La dimensión 1 explica la mayor variación en la solución, seguida de la dimensión 2 y así sucesivamente.\nEl porcentaje acumulado explicado se obtiene sumando las sucesivas proporciones de variación explicadas para obtener el total acumulado. Por ejemplo, 48,69% más 39,91% es igual a 88,6% y así sucesivamente. Por lo tanto, aproximadamente el 88,6% de la variación se explica por las dos primeras dimensiones.\nLos valores propios se pueden utilizar para determinar el número de ejes que se deben retener. No existe una “regla general” para elegir el número de dimensiones que se deben mantener para la interpretación de los datos. Depende de la pregunta de investigación y la necesidad del investigador. Por ejemplo, si está satisfecho con el 80% de las variaciones totales explicadas, utilice la cantidad de dimensiones necesarias para lograrlo.\n\nTenga en cuenta que se logra una buena reducción de dimensión cuando las primeras dimensiones representan una gran proporción de la variabilidad.\n\nEn nuestro análisis, los dos primeros ejes explican el 88,6% de la variación. Este es un porcentaje aceptablemente grande.\nUn método alternativo para determinar el número de dimensiones es mirar una gráfica de Scree Plot, que es el diagrama de valores propios/varianzas ordenados de mayor a menor. El número de componentes se determina en el punto, más allá del cual los valores propios restantes son todos relativamente pequeños y de tamaño comparable.\nEl gráfico Scree plot se puede realizar usando la función fviz_eig() o fviz_screeplot() [paquete factoextra].\n\n\nfviz_screeplot(res.ca, addlabels = TRUE, ylim = c(0, 50))\n\n\n\n\n\nSe puede considerar que el punto en el que el gráfico de pedregal muestra una curvatura (denominado “codo”) indica una dimensionalidad óptima.\n\nTambién es posible calcular un valor propio promedio por encima del cual el eje debe mantenerse en la solución.\n\nNuestros datos contienen 13 filas y 4 columnas.\nSi los datos fueran aleatorios, el valor esperado del valor propio para cada eje sería 1/(nrow(housetasks)-1) = 1/12 = 8,33% en términos de filas.\nAsimismo, el eje promedio debe representar 1/(ncol(housetasks)-1) = 1/3 = 33,33% en términos de las 4 columnas.\n\nSegún (M. T. Bendixen 1995): >Cualquier eje con una contribución mayor que el máximo de estos dos porcentajes debe ser considerado como importante e incluido en la solución para la interpretación de los datos.\nEl código R a continuación, dibuja el gráfico de pantalla con una línea discontinua roja que especifica el valor propio promedio:\n\n\nfviz_screeplot(res.ca) +\n  geom_hline(yintercept=33.33, linetype=2, color=\"red\")\n\n\n\n\nSegún el gráfico anterior, solo las dimensiones 1 y 2 deben usarse en la solución. La dimensión 3 explica sólo el 11,4% de la inercia total, que está por debajo del valor propio medio (33,33%) y es demasiado poco para guardarlo para un análisis más detallado.\n\nTenga en cuenta que puede utilizar más de 2 dimensiones. Sin embargo, es poco probable que las dimensiones complementarias contribuyan de manera significativa a la interpretación de la naturaleza de la asociación entre filas y columnas.\n\nLas dimensiones 1 y 2 explican aproximadamente el 48,7% y el 39,9% de la inercia total, respectivamente. Esto corresponde a un total acumulado del 88,6% de la inercia total retenida por las 2 dimensiones. Cuanto mayor sea la retención, más sutileza en los datos originales se retiene en la solución de baja dimensión (M. Bendixen 2003).\nBiplot\nLa función fviz_ca_biplot() [paquete factoextra] se puede utilizar para dibujar el biplot de las variables de filas y columnas.\n\n\n# repel= TRUE para evitar la superposición de texto (lenta si tiene muchos puntos)\nfviz_ca_biplot(res.ca, repel = TRUE)\n\n\n\n\nEl gráfico anterior se llama gráfico simétrico y muestra un patrón global dentro de los datos. Las filas están representadas por puntos azules y las columnas por triángulos rojos.\nLa distancia entre cualquier punto de fila o columna da una medida de su similitud (o disimilitud). Los puntos de fila con un perfil similar se cierran en el mapa de factores. Lo mismo es válido para los puntos de columna.\n\nEste gráfico muestra que:\nLas tareas de la casa, como la cena, el desayuno y la ropa, las hace la esposa con más frecuencia.\nLa conducción y las reparaciones las realiza el marido.\n\n\nEl gráfico simétrico representa los perfiles de fila y columna simultáneamente en un espacio común. En este caso, solo se puede interpretar realmente la distancia entre puntos de fila o la distancia entre puntos de columna.\n¡La distancia entre cualquier elemento de fila y columna no es significativa! Solo puede hacer declaraciones generales sobre el patrón observado.\nPara interpretar la distancia entre los puntos de columna y fila, los perfiles de columna deben presentarse en el espacio de fila o viceversa. Este tipo de mapa se llama biplot asimétrico y se analiza al final de este artículo.\n\nEl siguiente paso para la interpretación es determinar qué variables de fila y columna contribuyen más en la definición de las diferentes dimensiones retenidas en el modelo.\nOpciones de biplot\nBiplot es una visualización gráfica de filas y columnas en 2 o 3 dimensiones. Ya hemos descrito cómo crear CA biplots en la sección anterior. Aquí, describiremos diferentes tipos de biplots de CA.\nBiplot simétrico\nComo se mencionó anteriormente, el gráfico estándar del análisis de correspondencia es un biplot simétrico en el que tanto las filas (puntos azules) como las columnas (triángulos rojos) se representan en el mismo espacio utilizando las coordenadas principales. Estas coordenadas representan los perfiles de fila y columna. En este caso, solo se puede interpretar realmente la distancia entre puntos de fila o la distancia entre puntos de columna.\n\nCon la gráfica simétrica, la distancia entre filas y columnas no se puede interpretar. Solo se pueden hacer declaraciones generales sobre el patrón.\n\n\n\nfviz_ca_biplot(res.ca, repel = TRUE)\n\n\n\n\n\nTenga en cuenta que, para interpretar la distancia entre los puntos de la columna y los puntos de la fila, la forma más sencilla es hacer una gráfica asimétrica. Esto significa que los perfiles de columna deben presentarse en el espacio de la fila o viceversa.\n\nBiplot asimétrico\nPara hacer un biplot asimétrico, los puntos de las filas (o columnas) se trazan a partir de las coordenadas estándar (S) y los perfiles de las columnas (o las filas) se trazan a partir de las coordenadas principales (P) (M. Bendixen 2003).\nPara un eje dado, las coordenadas estándar y principal se relacionan de la siguiente manera:\nP = sqrt(valor propio) X S\nP: la coordenada principal de una fila (o una columna) en el eje\nvalor propio: el valor propio del eje\nDependiendo de la situación, se pueden configurar otros tipos de visualización utilizando el mapa de argumentos (Nenadic y Greenacre 2007) en la función fviz_ca_biplot() [in factoextra].\nLas opciones permitidas para el mapa de argumentos son:\n“rowprincipal” o “colprincipal”: estos son los llamados biplots asimétricos, con filas en coordenadas principales y columnas en coordenadas estándar, o viceversa (también conocido como preservar métricas de filas o preservar métricas de columnas, respectivamente).\n“rowprincipal”: las columnas se representan en el espacio de las filas\n“colprincipal”: las filas se representan en el espacio de la columna\n\n“symbiplot”: tanto las filas como las columnas se escalan para tener varianzas iguales a los valores singulares (raíces cuadradas de los valores propios), lo que da un biplot simétrico pero no conserva las métricas de filas o columnas.\n“rowgab” o “colgab”: mapas asimétricos propuestos por Gabriel y Odoroff (Gabriel y Odoroff 1990):\n“rowgab”: filas en coordenadas principales y columnas en coordenadas estándar multiplicadas por la masa.\n“colgab”: columnas en coordenadas principales y filas en coordenadas estándar multiplicadas por la masa.\n\n“rowgreen” o “colgreen”: Los llamados biplots de contribución que muestran visualmente los puntos que más contribuyen (Greenacre 2006b).\n“rowgreen”: filas en coordenadas principales y columnas en coordenadas estándar multiplicadas por la raíz cuadrada de la masa.\n“colgreen”: columnas en coordenadas principales y filas en coordenadas estándar multiplicadas por la raíz cuadrada de la masa.\n\nEl siguiente código R dibuja un biplot asimétrico estándar:\n\n\nfviz_ca_biplot(res.ca,\n               map =\"rowprincipal\", arrow = c(TRUE, TRUE),\n               repel = TRUE)\n\n\n\n\nUsamos el argumento flechas, que es un vector de dos lógicas que especifican si la gráfica debe contener puntos (FALSE, predeterminado) o flechas (TRUE). El primer valor establece las filas y el segundo valor establece el columnas.\nSi el ángulo entre dos flechas es agudo, entonces existe una fuerte asociación entre la fila y la columna correspondientes.\nPara interpretar la distancia entre filas y una columna, debe proyectar perpendicularmente puntos de fila en la flecha de la columna.\nBiplot de contribución\nEn el biplot simétrico estándar (mencionado en la sección anterior), es difícil conocer los puntos que más contribuyen a la solución de la CA.\nMichael Greenacre propuso una nueva escala mostrada (llamada biplot de contribución) que incorpora la contribución de puntos (M. Greenacre 2013). En esta visualización, los puntos que contribuyen muy poco a la solución, están cerca del centro de la biplot y son relativamente poco importantes para la interpretación.\n\nSe puede dibujar un biplot de contribución usando el argumento map = \"rowgreen\" o map = \"colgreen\".\n\nEn primer lugar, hay que decidir si analizar las contribuciones de filas o columnas a la definición de los ejes.\nEn nuestro ejemplo interpretaremos la contribución de las filas a los ejes. Se utiliza el argumento map = \"colgreen\". En este caso, recuerde que las columnas están en coordenadas principales y las filas en coordenadas estándar multiplicadas por la raíz cuadrada de la masa. Para una fila dada, el cuadrado de la nueva coordenada en un eje i es exactamente la contribución de esta fila a la inercia del eje i.\n\n\nfviz_ca_biplot(res.ca, map =\"colgreen\", arrow = c(TRUE, FALSE),\n               repel = TRUE)\n\n\n\n\nEn el gráfico anterior, la posición de los puntos del perfil de la columna no cambia con respecto a la del biplot convencional. Sin embargo, las distancias de los puntos de fila desde el origen de la gráfica están relacionadas con sus contribuciones al mapa de factores bidimensionales.\nCuanto más cerca esté una flecha (en términos de distancia angular) de un eje, mayor será la contribución de la categoría de fila en ese eje en relación con el otro eje. Si la flecha está a medio camino entre los dos, su categoría de fila contribuye a los dos ejes en la misma medida.\n\nEs evidente que la categoría de fila Reparaciones (Repairs) tiene una contribución importante al polo positivo de la primera dimensión, mientras que las categorías Lavandería (Laundry) y Comida principal (Main_meal) tienen una contribución importante al polo negativo de la primera dimensión;\nLa dimensión 2 se define principalmente por la categoría de fila Vacaciones (Holidays).\nLa categoría de fila Conducción (Driving) contribuye a los dos ejes en la misma medida.\n\nDescripción de las dimensiones\nPara identificar fácilmente los puntos de fila y columna que están más asociados con las dimensiones principales, puede usar la función dimdesc() [en FactoMineR]. Las variables de fila/columna se ordenan por sus coordenadas en la salida dimdesc().\n\n\n# Descripción de la dimensión\nres.desc <- dimdesc(res.ca, axes = c(1,2))\n\n\n\nDescripción de la dimensión 1:\n\n\n# Descripción de la dimensión 1 por puntos de fila\nhead(res.desc[[1]]$row, 4)\n\n\n                coord\nLaundry    -0.9918368\nMain_meal  -0.8755855\nDinner     -0.6925740\nBreakfeast -0.5086002\n\n# Descripción de la dimensión 1 por puntos de columna\nhead(res.desc [[1]]$col, 4)\n\n\n                  coord\nWife        -0.83762154\nAlternating -0.06218462\nJointly      0.14942609\nHusband      1.16091847\n\nDescripción de la dimensión 2:\n\n\n# Descripción de la dimensión 2 por puntos de fila\nres.desc[[2]]$fila\n\n\nNULL\n\n# Descripción de la dimensión 1 por puntos de columna\nres.desc[[2]]$col\n\n\n                 coord\nJointly     -1.0265791\nAlternating  0.2915938\nWife         0.3652207\nHusband      0.6019199\n\n\n\n\n",
    "preview": "posts/2021-03-14-analiscorrespondencia/featured.png",
    "last_modified": "2021-03-14T17:13:29-04:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-03-14-tidyexam/",
    "title": "Ordenar datos con el paquete Tidyverse",
    "description": "Es un ejemplo de caso extraido del libro R4DS.",
    "author": [
      {
        "name": "Franklin Santos",
        "url": "https://franklinsantos.com"
      }
    ],
    "date": "2020-10-31",
    "categories": [
      "Data Science",
      "Tidy Data",
      "Tidyverse"
    ],
    "contents": "\nIntroducción\nLa ordenación de datos es una de las tareas mas importantes despues de concluir la investigación. En las ciencias agrícolas, generalmente la investigación concluye con la evaluación de la cosecha del cultivo. Generalmente nuestros datos pueden estar organizados en un libro de campo; sin embargo, en otras áreas no es así.\nEn este blog replicaré un ejemplo de ordenación de datos con el paquete Tidyverse del libro R4DS. El dataset datos::oms contiene datos de tuberculosis (TB) detallados por año, país, edad, sexo y método de diagnóstico. Los datos provienen del Informe de Tuberculosis de la Organización Mundial de la Salud 2014, disponible en http://www.who.int/tb/country/data/download/en/.\nProcedimiento de ordenación\nCargar el paquete tidyverse\nEl primer paso es instalar el paquete tidyverse del CRAN de R. Posterior a esto es cargar el paquete en nuestra consola de R.\n\n\nlibrary(tidyverse)\n#En el paquete datos se encuentra la base de datos para este ejemplo\nlibrary(datos)\n\n\n\nA continuación observación el estado de los datos de oms.\n\n\nhead(oms)\n\n\n# A tibble: 6 x 60\n  pais       iso2  iso3   anio nuevos_fpp_h014 nuevos_fpp_h1524\n  <chr>      <chr> <chr> <int>           <int>            <int>\n1 Afganistán AF    AFG    1980              NA               NA\n2 Afganistán AF    AFG    1981              NA               NA\n3 Afganistán AF    AFG    1982              NA               NA\n4 Afganistán AF    AFG    1983              NA               NA\n5 Afganistán AF    AFG    1984              NA               NA\n6 Afganistán AF    AFG    1985              NA               NA\n# … with 54 more variables: nuevos_fpp_h2534 <int>,\n#   nuevos_fpp_h3544 <int>, nuevos_fpp_h4554 <int>,\n#   nuevos_fpp_h5564 <int>, nuevos_fpp_h65 <int>,\n#   nuevos_fpp_m014 <int>, nuevos_fpp_m1524 <int>,\n#   nuevos_fpp_m2534 <int>, nuevos_fpp_m3544 <int>,\n#   nuevos_fpp_m4554 <int>, nuevos_fpp_m5564 <int>,\n#   nuevos_fpp_m65 <int>, nuevos_fpn_h014 <int>,\n#   nuevos_fpn_h1524 <int>, nuevos_fpn_h2534 <int>,\n#   nuevos_fpn_h3544 <int>, nuevos_fpn_h4554 <int>,\n#   nuevos_fpn_h5564 <int>, nuevos_fpn_h65 <int>,\n#   nuevos_fpn_m014 <int>, nuevos_fpn_m1524 <int>,\n#   nuevos_fpn_m2534 <int>, nuevos_fpn_m3544 <int>,\n#   nuevos_fpn_m4554 <int>, nuevos_fpn_m5564 <int>,\n#   nuevos_fpn_m65 <int>, nuevos_ep_h014 <int>,\n#   nuevos_ep_h1524 <int>, nuevos_ep_h2534 <int>,\n#   nuevos_ep_h3544 <int>, nuevos_ep_h4554 <int>,\n#   nuevos_ep_h5564 <int>, nuevos_ep_h65 <int>, nuevos_ep_m014 <int>,\n#   nuevos_ep_m1524 <int>, nuevos_ep_m2534 <int>,\n#   nuevos_ep_m3544 <int>, nuevos_ep_m4554 <int>,\n#   nuevos_ep_m5564 <int>, nuevos_ep_m65 <int>,\n#   nuevosrecaida_h014 <int>, nuevosrecaida_h1524 <int>,\n#   nuevosrecaida_h2534 <int>, nuevosrecaida_h3544 <int>,\n#   nuevosrecaida_h4554 <int>, nuevosrecaida_h5564 <int>,\n#   nuevosrecaida_h65 <int>, nuevosrecaida_m014 <int>,\n#   nuevosrecaida_m1524 <int>, nuevosrecaida_m2534 <int>,\n#   nuevosrecaida_m3544 <int>, nuevosrecaida_m4554 <int>,\n#   nuevosrecaida_m5564 <int>, nuevosrecaida_m65 <int>\n\nEn la salida se observa un ejemplo muy típico de una base de datos de la vida real. Contiene columnas redundantes, códigos extraños de variables y muchos valores faltantes. Practicamente, la base de datos oms está desordenado, por tanto, se necesita ordenarlo de manera sencilla con tidyverse.\nPasos de ordenación\nNecesitamos agrupar todas las columnas desde nuevos_fpp_h014 hasta recaidas_m65. No sabemos aún qué representa esto, por lo que le daremos el nombre genérico de \"clave\". Sabemos que las celdas representan la cuenta de casos, por lo que usaremos la variable casos.\nExisten múltiples valores faltantes en la representación actual, por lo que de momento usaremos na.rm para centrarnos en los valores que están presentes.\n\n\noms1 <- oms %>%\n  pivot_longer(\n    cols = nuevos_fpp_h014:nuevosrecaida_m65, \n    names_to = \"clave\", \n    values_to = \"casos\", \n    values_drop_na = TRUE\n  )\noms1\n\n\n# A tibble: 76,046 x 6\n   pais       iso2  iso3   anio clave            casos\n   <chr>      <chr> <chr> <int> <chr>            <int>\n 1 Afganistán AF    AFG    1997 nuevos_fpp_h014      0\n 2 Afganistán AF    AFG    1997 nuevos_fpp_h1524    10\n 3 Afganistán AF    AFG    1997 nuevos_fpp_h2534     6\n 4 Afganistán AF    AFG    1997 nuevos_fpp_h3544     3\n 5 Afganistán AF    AFG    1997 nuevos_fpp_h4554     5\n 6 Afganistán AF    AFG    1997 nuevos_fpp_h5564     2\n 7 Afganistán AF    AFG    1997 nuevos_fpp_h65       0\n 8 Afganistán AF    AFG    1997 nuevos_fpp_m014      5\n 9 Afganistán AF    AFG    1997 nuevos_fpp_m1524    38\n10 Afganistán AF    AFG    1997 nuevos_fpp_m2534    36\n# … with 76,036 more rows\n\nPara visualizar el conteo de valores en la nueva columna clave:\n\n\noms1 %>%\n  count(clave)\n\n\n# A tibble: 56 x 2\n   clave               n\n   <chr>           <int>\n 1 nuevos_ep_h014   1038\n 2 nuevos_ep_h1524  1026\n 3 nuevos_ep_h2534  1020\n 4 nuevos_ep_h3544  1024\n 5 nuevos_ep_h4554  1020\n 6 nuevos_ep_h5564  1015\n 7 nuevos_ep_h65    1018\n 8 nuevos_ep_m014   1032\n 9 nuevos_ep_m1524  1021\n10 nuevos_ep_m2534  1021\n# … with 46 more rows\n\nPara entender el significado de cada variable, se dispone de un diccionario de datos a mano. Este dice lo siguiente:\nLo que aparece antes del primer _ en las columnas indica si la columna contiene casos nuevos o antiguos de tuberculosis. En este dataset, cada columna contiene nuevos casos.\nLo que aparece luego de indicar si se refiere casos nuevos o antiguos es el tipo de tuberculosis:\nrecaida se refiere a casos reincidentes\nep se refiere a tuberculosis extra pulmonar\nfpn se refiere a casos de tuberculosis pulmonar que no se pueden detectar mediante examen de frotis pulmonar (frotis pulmonar negativo)\nfpp se refiere a casos de tuberculosis pulmonar que se pueden detectar mediante examen de frotis pulmonar (frotis pulmonar positivo)\nLa letra que aparece después del último _ se refiere al sexo de los pacientes. El conjunto de datos agrupa en hombres (h) y mujeres (m).\nLos números finales se refieren al grupo etareo que se ha organizado en siete categorías:\n014 = 0 - 14 años de edad\n1524 = 15 – 24 años de edad\n2534 = 25 – 34 años de edad\n3544 = 35 – 44 años de edad\n4554 = 45 – 54 años de edad\n5564 = 55 – 64 años de edad\n65 = 65 o más años de edad\nNecesitamos hacer un pequeño cambio al formato de los nombres de las columnas: desafortunadamente lo nombres de las columnas son ligeramente inconsistentes debido a que en lugar de nuevos_recaida tenemos nuevosrecaida (es difícil darse cuenta de esto en esta parte, pero si no lo arreglas habrá errores en los pasos siguientes). Para esto, la idea básica es bastante simple: reemplazar los caracteres “nuevosrecaida” por “nuevos_recaida”. Esto genera nombres de variables consistentes.\n\n\noms2 <- oms1 %>%\n  mutate(clave = stringr::str_replace(clave, \"nuevosrecaida\", \"nuevos_recaida\"))\noms2\n\n\n# A tibble: 76,046 x 6\n   pais       iso2  iso3   anio clave            casos\n   <chr>      <chr> <chr> <int> <chr>            <int>\n 1 Afganistán AF    AFG    1997 nuevos_fpp_h014      0\n 2 Afganistán AF    AFG    1997 nuevos_fpp_h1524    10\n 3 Afganistán AF    AFG    1997 nuevos_fpp_h2534     6\n 4 Afganistán AF    AFG    1997 nuevos_fpp_h3544     3\n 5 Afganistán AF    AFG    1997 nuevos_fpp_h4554     5\n 6 Afganistán AF    AFG    1997 nuevos_fpp_h5564     2\n 7 Afganistán AF    AFG    1997 nuevos_fpp_h65       0\n 8 Afganistán AF    AFG    1997 nuevos_fpp_m014      5\n 9 Afganistán AF    AFG    1997 nuevos_fpp_m1524    38\n10 Afganistán AF    AFG    1997 nuevos_fpp_m2534    36\n# … with 76,036 more rows\n\nUna vez reemplazado, nos facilita separar los valores en cada código aplicando separate() dos veces. La primera aplicación dividirá los códigos en cada _.\n\n\noms3 <- oms2 %>%\n  separate(clave, c(\"nuevos\", \"tipo\", \"sexo_edad\"), sep = \"_\")\noms3\n\n\n# A tibble: 76,046 x 8\n   pais       iso2  iso3   anio nuevos tipo  sexo_edad casos\n   <chr>      <chr> <chr> <int> <chr>  <chr> <chr>     <int>\n 1 Afganistán AF    AFG    1997 nuevos fpp   h014          0\n 2 Afganistán AF    AFG    1997 nuevos fpp   h1524        10\n 3 Afganistán AF    AFG    1997 nuevos fpp   h2534         6\n 4 Afganistán AF    AFG    1997 nuevos fpp   h3544         3\n 5 Afganistán AF    AFG    1997 nuevos fpp   h4554         5\n 6 Afganistán AF    AFG    1997 nuevos fpp   h5564         2\n 7 Afganistán AF    AFG    1997 nuevos fpp   h65           0\n 8 Afganistán AF    AFG    1997 nuevos fpp   m014          5\n 9 Afganistán AF    AFG    1997 nuevos fpp   m1524        38\n10 Afganistán AF    AFG    1997 nuevos fpp   m2534        36\n# … with 76,036 more rows\n\nA continuación podemos eliminar la columna nuevos, ya que es constante en este dataset. Además eliminaremos iso2 e iso3 ya que son redundantes.\n\n\noms3 %>%\n  count(nuevos)\n\n\n# A tibble: 1 x 2\n  nuevos     n\n  <chr>  <int>\n1 nuevos 76046\n\noms4 <- oms3 %>%\n  select(-nuevos, -iso2, -iso3)\n\n\n\nLuego separamos sexo_edad en sexo y edad dividiendo luego del primer carácter:\n\n\noms5 <- oms4 %>%\n  separate(sexo_edad, c(\"sexo\", \"edad\"), sep = 1)\noms5\n\n\n# A tibble: 76,046 x 6\n   pais        anio tipo  sexo  edad  casos\n   <chr>      <int> <chr> <chr> <chr> <int>\n 1 Afganistán  1997 fpp   h     014       0\n 2 Afganistán  1997 fpp   h     1524     10\n 3 Afganistán  1997 fpp   h     2534      6\n 4 Afganistán  1997 fpp   h     3544      3\n 5 Afganistán  1997 fpp   h     4554      5\n 6 Afganistán  1997 fpp   h     5564      2\n 7 Afganistán  1997 fpp   h     65        0\n 8 Afganistán  1997 fpp   m     014       5\n 9 Afganistán  1997 fpp   m     1524     38\n10 Afganistán  1997 fpp   m     2534     36\n# … with 76,036 more rows\n\n¡Ahora la base de datos oms está ordenado!\nResumen\nEn la anterior sección se hizo el procedimiento de ordenación paso a paso, asignando los resultados intermedios a nuevas variables. Esta no es la forma típica de trabajo. En realidad, los códigos debería ser de manera incremental usando pipes (\"%>%):\n\n\nfsdata<- oms %>%\n  pivot_longer(\n    cols = nuevos_fpp_h014:nuevosrecaida_m65,\n    names_to = \"clave\", \n    values_to = \"valor\", \n    values_drop_na = TRUE) %>%\n  mutate(clave = stringr::str_replace(clave, \"nuevosrecaida\", \"nuevos_recaida\")) %>%\n  separate(clave, c(\"nuevos\", \"tipo\", \"sexo_edad\")) %>%\n  select(-nuevos, -iso2, -iso3) %>%\n  separate(sexo_edad, c(\"sexo\", \"edad\"), sep = 1)\nfsdata\n\n\n# A tibble: 76,046 x 6\n   pais        anio tipo  sexo  edad  valor\n   <chr>      <int> <chr> <chr> <chr> <int>\n 1 Afganistán  1997 fpp   h     014       0\n 2 Afganistán  1997 fpp   h     1524     10\n 3 Afganistán  1997 fpp   h     2534      6\n 4 Afganistán  1997 fpp   h     3544      3\n 5 Afganistán  1997 fpp   h     4554      5\n 6 Afganistán  1997 fpp   h     5564      2\n 7 Afganistán  1997 fpp   h     65        0\n 8 Afganistán  1997 fpp   m     014       5\n 9 Afganistán  1997 fpp   m     1524     38\n10 Afganistán  1997 fpp   m     2534     36\n# … with 76,036 more rows\n\nConclusión\nEs un ejemplo muy bueno para practicar y usar las diferentes funciones de tidyverse en la ordenación de datos.\n\n\n\n",
    "preview": "posts/2021-03-14-tidyexam/featured.png",
    "last_modified": "2021-03-14T16:31:00-04:00",
    "input_file": {}
  }
]
